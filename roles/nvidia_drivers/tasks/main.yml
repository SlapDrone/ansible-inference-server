---
# This role now primarily handles NVIDIA Container Toolkit installation and Docker configuration.
# Driver installation itself is skipped if 'install_nvidia_drivers' is false.

- name: Check if NVIDIA GPU detected (basic check, does not fail playbook)
  ansible.builtin.shell: lspci | grep -i nvidia
  register: nvidia_check
  changed_when: false
  failed_when: false

# --- Optional: Driver Installation (Only runs if install_nvidia_drivers is true) ---
- name: Install NVIDIA Drivers via ubuntu-drivers (if requested)
  ansible.builtin.command: ubuntu-drivers install nvidia-driver-570-server
  become: yes
  when:
    - install_nvidia_drivers | default(true)
    - nvidia_check.rc == 0 # Only if an NVIDIA device seems present
  changed_when: "'already installed' not in command_result.stdout" # Basic attempt at idempotency
  register: command_result

- name: Install nvidia utils 
  ansible.builtin.apt:
    name: nvidia-utils-570-server
    state: present
  become: yes
  when: 
    - install_nvidia_drivers | default(true)
    - nvidia_check.rc == 0

# --- CUDA Toolkit Installation (If install_cuda_toolkit is true) ---
- name: Download runfile
  ansible.builtin.shell: |
    wget https://developer.download.nvidia.com/compute/cuda/12.8.1/local_installers/cuda_12.8.1_570.124.06_linux.run 
  args:
    creates: cuda_12.8.1_570.124.06_linux.run  # Checks if file exists in current directory
  become: yes
  when: 
    - install_cuda_toolkit | default(true)
    - nvidia_check.rc == 0
  register: cuda_repo_install

- name: Install CUDA repository package
  ansible.builtin.shell: |
    sh cuda_12.8.1_570.124.06_linux.run --silent --toolkit --override
  args:
    creates: /usr/local/cuda-12.8  # Checks if CUDA toolkit installation exists
  become: yes
  when: 
    - install_cuda_toolkit | default(true)
    - nvidia_check.rc == 0
  register: cuda_repo_install

# - name: Download CUDA repository pin file
#   ansible.builtin.get_url:
#     url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin
#     dest: /etc/apt/preferences.d/cuda-repository-pin-600
#     mode: '0644'
#   become: yes
#   when: 
#     - install_cuda_toolkit | default(true)
#     - nvidia_check.rc == 0

# - name: Download CUDA repository package
#   ansible.builtin.get_url:
#     url: https://developer.download.nvidia.com/compute/cuda/12.8.1/local_installers/cuda-repo-ubuntu2404-12-8-local_12.8.1-570.124.06-1_amd64.deb
#     dest: /tmp/cuda-repo.deb
#     mode: '0644'
#   become: yes
#   when: 
#     - install_cuda_toolkit | default(true)
#     - nvidia_check.rc == 0
# - name: Install CUDA repository package
#   ansible.builtin.shell:
#     cmd: dpkg -i /tmp/cuda-repo.deb
#     creates: /var/lib/dpkg/info/cuda-repo-ubuntu2404-12-8-local.list # Check if package installed
#   become: yes
#   when: 
#     - install_cuda_toolkit | default(true)
#     - nvidia_check.rc == 0
#   register: cuda_repo_install
#   changed_when: "'installing' in cuda_repo_install.stdout"

# - name: Copy CUDA repository keyring
#   ansible.builtin.shell:
#     cmd: cp /var/cuda-repo-ubuntu2404-12-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
#     creates: /usr/share/keyrings/cuda-archive-keyring.gpg
#   become: yes
#   when: 
#     - install_cuda_toolkit | default(true)
#     - nvidia_check.rc == 0

# - name: Update apt cache after adding CUDA repository
#   ansible.builtin.apt:
#     update_cache: yes
#   become: yes
#   when: 
#     - install_nvidia_drivers | default(false)
#     - nvidia_check.rc == 0

# - name: Install CUDA Toolkit 12-8
#   ansible.builtin.apt:
#     name: cuda-toolkit-12-8
#     state: present
#   become: yes
#   when: 
#     - install_nvidia_drivers | default(false)
#     - nvidia_check.rc == 0
#   notify: Restart Docker

# # --- Required for GPU Docker Containers: Toolkit Installation & Docker Config (If configure_nvidia_toolkit is true) ---
- name: Install prerequisites for NVIDIA Container Toolkit repo
  ansible.builtin.apt:
    name:
      - curl # Already installed by common, but ensures it here too
    state: present
  become: yes
  when: configure_nvidia_toolkit | default(true)

- name: Add NVIDIA Container Toolkit GPG Key
  ansible.builtin.shell: >
    curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey |
    gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
  args:
    creates: /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
  become: yes
  when: configure_nvidia_toolkit | default(true)

- name: Add NVIDIA Container Toolkit Repository
  ansible.builtin.shell: >
    curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list |
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' |
    tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
  args:
    creates: /etc/apt/sources.list.d/nvidia-container-toolkit.list
  become: yes
  when: configure_nvidia_toolkit | default(true)

- name: Update apt cache after potentially adding NVIDIA repo
  ansible.builtin.apt:
    update_cache: yes
  become: yes
  when: configure_nvidia_toolkit | default(true) # Run only if we might have added the repo

- name: Install NVIDIA Container Toolkit package
  ansible.builtin.apt:
    name: nvidia-container-toolkit
    state: present
  become: yes
  when: configure_nvidia_toolkit | default(true)
  notify: Restart Docker # Need to restart docker after toolkit install/config

- name: Configure Docker daemon to use NVIDIA runtime by default
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  become: yes
  when: configure_nvidia_toolkit | default(false)
  notify: Restart Docker # Need to restart docker after toolkit install/config

- name: Flush handlers to ensure Docker restart happens now
  meta: flush_handlers

- name: Add CUDA paths to user's .profile
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.profile"
    block: |
      export PATH="$PATH:/usr/local/cuda-12.8/bin"
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda-12.8/lib64"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - CUDA"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    create: yes
  become: yes
  when: 
    - install_cuda_toolkit | default(true)
    - nvidia_check.rc == 0
